"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7280],{5636:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Eval-Kits/Eval-Kit-Overview","title":"Evaluation Kits Overview","description":"The basics of what an evaluation kit is and how you can use it","source":"@site/docs/Eval-Kits/Eval-Kit-Overview.md","sourceDirName":"Eval-Kits","slug":"/Eval-Kits/Eval-Kit-Overview","permalink":"/Eval-Kits/Eval-Kit-Overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Evaluation Kits","permalink":"/category/evaluation-kits"},"next":{"title":"Evaluation Kits Assembly Steps","permalink":"/Eval-Kits/Eval-Kit-Assembly"}}');var a=i(4848),n=i(8453);const r={sidebar_position:1},s="Evaluation Kits Overview",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Structure",id:"structure",level:2},{value:"Assembly",id:"assembly",level:2}];function c(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"evaluation-kits-overview",children:"Evaluation Kits Overview"})}),"\n",(0,a.jsx)(t.p,{children:"The basics of what an evaluation kit is and how you can use it"}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(t.p,{children:"A COSMIIC System evaluation kit is essential for you to test new features in software orfirmware, scope unique module orientations, or possibly create new modules. The evaluation kit is a custom-oriented system sitting on your benchtop that mirrors the function of an implantable COSMIIC System. Kits are essential for you to advance a project from (1) idea \u2192 (2) benchtop testing \u2192 (3) animal testing \u2192 (4) clinical feasibility. The open source COSMIIC System and evaluation kit give you the power and flexibility you need to develop your neuromodulation concepts."}),"\n",(0,a.jsx)(t.h2,{id:"structure",children:"Structure"}),"\n",(0,a.jsx)(t.p,{children:'Let\'s get our vocabulary consistent: an "evaluation kit" consists of one or more "evaluation boards." An evaluation board represents the circuitry and function of one of the implantable module types\u2014either the PM, PG4, or BP2 module. These boards can be stacked on top of each other, and with built-in network jumpers, are connected on the same physical network. Your stack of boards, or "kit" is based on the function you require (# of stim channels, # of recording channels). For example, if you need 8 channels of stimulation and 2 channels of recording, your kit should be assembled with a PM module, two PG4 modules, and one BP2 module.'}),"\n",(0,a.jsx)(t.p,{children:'The current design of evaluation boards has two assembled components\u2014a "frame board" and a module circuit board. Frame board is our term, akin to breakout board or board shield, for a circuit board that provides supplemental interface to the module circuit with a consistent form factor.  Fixing a delicate circuit board of an implantable module onto the frame board allows for easier handling and more points of diagnostic interaction with the board.'}),"\n",(0,a.jsx)(t.h2,{id:"assembly",children:"Assembly"}),"\n",(0,a.jsx)(t.p,{children:"To understand how your eval kit was assembled or to build your own, refer to pages"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/Eval-Kits/PM-Eval-Board",children:"PM Eval Board"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/Eval-Kits/PG4-Eval-Board",children:"PG4 Eval Board"})}),"\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"/Eval-Kits/BP2-Eval-Board",children:"BP2 Eval Board"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>s});var o=i(6540);const a={},n=o.createContext(a);function r(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);